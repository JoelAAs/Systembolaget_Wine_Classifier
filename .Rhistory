all_word
source('~/Rscripts/Webcrawler/sort_word_manual.R')
all_word <- lapply(save_id_tmp$RavarorBeskrivning, function(x) x<-gsub("[0-9/%]+",tolower(x),replacement = ""))
all_word <- lapply(all_word, function(x) x<-gsub("samt ovriga druvsorter",x,replacement = ""))
all_word <- lapply(all_word, function(x) x<-gsub("och",x,replacement = ","))
all_word <- lapply(all_word, function(x) x<-gsub("samt",x,replacement = ","))
all_word <- lapply(all_word, function(x) x<-gsub("huvudsakligen",x,replacement = ""))
all_word <- lapply(all_word, function(x) x<-gsub("\\."     ,x,replacement = ""))
all_word <- lapply(all_word, function(x) x<-gsub(" "      ,x,replacement = ""))
source('~/Rscripts/Webcrawler/sort_word_manual.R')
source('~/Rscripts/Webcrawler/sort_word_manual.R')
all_wine <- read.csv("~/Rscripts/Webcrawler/FulldataRwine.csv", stringsAsFactors = F)
1!=0
"hej"!= "hej"
0 != NA
0 != fa
0 != 2
NA(1)
NA(r)
source('~/Rscripts/Webcrawler/get_class_wine.R')
list(all_wine, detail_info, details_df)
a<-c("hej" "då")
a<-c("hej" "da")
c("a"  "b")
c("a" , "b")
a<-c("hej", "då")
match("hej",a)
source('~/Rscripts/Webcrawler/get_score_RCGY_sub.R')
source('~/Rscripts/Webcrawler/make_score_RCGY.R')
source('~/Rscripts/Webcrawler/predict_score_RCGY.R')
mean(c(2,NA,3,2))
mean(c(2,NaN,3,2))
source('~/Rscripts/Webcrawler/make_score_Bar.R')
source('~/Rscripts/Webcrawler/predict_score_RCGY.R')
source('~/Rscripts/Webcrawler/predict_score_bar.R')
is.na(c(NA NA 1 2))
is.na(c(NA NA Na NA))
0-NA
source('~/Rscripts/Webcrawler/wine_classify.R')
all_wine <- read.csv("~/Rscripts/Webcrawler/data_mine_wine_score.csv", stringsAsFactors = F)
source.with.encoding('~/Rscripts/Webcrawler/get_score_sub.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/get_class_wine.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_Bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_taste.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_taste.R', encoding='UTF-8')
# Fungerar
current_score_RCGY       <- make_score_RCGY(all_wine)
# Fungerar
current_score_bar        <- make_score_Bar(all_wine)
# Fungerar
current_score_taste      <- make_score_taste(all_wine)
# Fungerar
all_wine$RCGY_predicted  <- predict_score_RCGY(all_wine,current_score_RCGY)
# Fungerar
all_wine$bar_predicted   <- predict_score_bar(all_wine, current_score_bar)
# Fungerar
all_wine$Taste_predicted <- predict_score_taste(all_wine,current_score_taste)
View(all_wine)
all_wine <- read.csv("~/Rscripts/Webcrawler/data_mine_wine_score.csv", stringsAsFactors = F)
source.with.encoding('~/Rscripts/Webcrawler/get_score_sub.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/get_class_wine.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_Bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_taste.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_taste.R', encoding='UTF-8')
# Fungerar
current_score_RCGY       <- make_score_RCGY(all_wine)
# Fungerar
current_score_bar        <- make_score_Bar(all_wine)
# Fungerar
current_score_taste      <- make_score_taste(all_wine)
# Fungerar
all_wine$RCGY_predicted  <- predict_score_RCGY(all_wine,current_score_RCGY)
# Fungerar
all_wine$bar_predicted   <- predict_score_bar(all_wine, current_score_bar)
# Fungerar
all_wine$Taste_predicted <- predict_score_taste(all_wine,current_score_taste)
source('~/Rscripts/Webcrawler/wine_classify.R')
View(all_wine)
View(all_wine)
View(current_score_taste)
all_wine <- read.csv("~/Rscripts/Webcrawler/data_mine_wine_score.csv", stringsAsFactors = F)
source.with.encoding('~/Rscripts/Webcrawler/get_score_sub.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/get_class_wine.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_Bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_taste.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_taste.R', encoding='UTF-8')
# Fungerar
current_score_RCGY       <- make_score_RCGY(all_wine)
# Fungerar
current_score_bar        <- make_score_Bar(all_wine)
# Fungerar
current_score_taste      <- make_score_taste(all_wine)
# Fungerar
all_wine$RCGY_predicted  <- predict_score_RCGY(all_wine,current_score_RCGY)
# Fungerar
all_wine$bar_predicted   <- predict_score_bar(all_wine, current_score_bar)
# Fungerar
all_wine$Taste_predicted <- predict_score_taste(all_wine,current_score_taste)
View(all_wine)
c(1 2 3)
c(1, 2, 3)+c(1, 2, ,3)
c(1, 2, 3)+c(1, 2, 3)
(c(1, 2, 3)+c(1, 2, 3))/3
all_wine$predicted_sum   <- (all_wine$RCGY_predicted + all_wine$bar_predicted + all_wine$Taste_predicted)/3
View(all_wine)
hist(all_wine$predicted_sum)
test<-data.frame(all_wine$Namn,all_wine$predicted_sum)
sort(test)
sort(test$all_wine.predicted_sum)
test<-est[sort(test$all_wine.predicted_sum)
asd
test<-test[sort(test$all_wine.predicted_sum)]
test<-test[sort(test$predicted_sum)]
test<-test[sort(test$predicted_sum),]
sort(test$predicted_sum)
test<-test[sort(test$all_wine.predicted_sum)]
sort(test$all_wine.predicted_sum)]
sort(test$all_wine.predicted_sum)
sort(test$all_wine.predicted_sum)
test<-data.frame(all_wine$Namn,all_wine$predicted_sum)
test[sort(test$all_wine.predicted_sum)]
test[sort(test$all_wine.predicted_sum),]
View(all_wine)
test<-data.frame(all_wine$Namn,all_wine$predicted_sum,all_wine$PrisPerLiter)
test[sort(test$all_wine.predicted_sum),]
a<-test[sort(test$all_wine.predicted_sum),]
View(a)
test
View(test)
a<-test[order(all_wine.predicted_sum),]
a<-test[order(test$all_wine.predicted_sum),]
a
plot(test$all_wine.predicted_sum,test$all_wine.PrisPerLiter)
View(a)
source('~/Rscripts/Webcrawler/wine_classify.R')
all_wine <- read.csv("~/Rscripts/Webcrawler/data_mine_wine_score.csv", stringsAsFactors = F)
source.with.encoding('~/Rscripts/Webcrawler/get_score_sub.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/get_class_wine.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_Bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_taste.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_taste.R', encoding='UTF-8')
# Fungerar
current_score_RCGY       <- make_score_RCGY(all_wine)
View(all_wine)
source('~/Rscripts/Webcrawler/wine_classify.R')
View(all_wine)
source('~/Rscripts/Webcrawler/wine_classify.R')
current_score_RCGY       <- make_score_RCGY(all_wine)
all_wine <- read.csv("~/Rscripts/Webcrawler/data_mine_wine_score.csv", stringsAsFactors = F)
source.with.encoding('~/Rscripts/Webcrawler/get_score_sub.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/get_class_wine.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_Bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_taste.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_taste.R', encoding='UTF-8')
# Fungerar
current_score_RCGY       <- make_score_RCGY(all_wine)
View(current_score_RCGY)
wine_in<-all_wine
table_out             <- data.frame(name =character(0),score = numeric(0), stringsAsFactors=F)
wine_in               <- wine_in[which(wine_in$real_score != 99),]
wine_in$simple_region <- unlist(lapply(wine_in$Ursprung, function(x) x<- strsplit(x,"\\.")[[1]][1]))
wine_in$class_grape   <- unlist(get_class_wine(wine_in$RavarorBeskrivning))
regions <- unlist(unique(wine_in$simple_region))
country <- unique(wine_in$Ursprunglandnamn)
grape   <- unique(wine_in$class_grape)
year    <- unique(wine_in$Argang)
lapply(wine_in$Ursprung, function(x) x<- strsplit(x,"\\.")
)
unlist(get_class_wine(wine_in$RavarorBeskrivning))
source('~/Rscripts/Webcrawler/wine_classify.R')
all_wine <- read.csv("~/Rscripts/Webcrawler/data_mine_wine_score.csv", stringsAsFactors = F)
source.with.encoding('~/Rscripts/Webcrawler/get_score_sub.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/get_class_wine.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_Bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_taste.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_taste.R', encoding='UTF-8')
current_score_RCGY       <- make_score_RCGY(all_wine)
current_score_bar        <- make_score_Bar(all_wine)
current_score_taste      <- make_score_taste(all_wine)
all_wine$RCGY_predicted  <- predict_score_RCGY(all_wine,current_score_RCGY)
warnings()
all_wine$bar_predicted   <- predict_score_bar(all_wine, current_score_bar)
# Fungerar
all_wine$Taste_predicted <- predict_score_taste(all_wine,current_score_taste)
all_wine$predicted_sum   <- (all_wine$RCGY_predicted + all_wine$bar_predicted + all_wine$Taste_predicted)/3
wine_in<-all_wine
score_RCGY <- c()
wine_in$simple_region <- unlist(lapply(wine_in$Ursprung, function(x) x<- strsplit(x,"\\.")[[1]][1]))
wine_in$class_grape   <- get_class_wine(wine_in$RavarorBeskrivning)
for (i in 1:length(wine_in$Artikelid)){
k = 0
R <- get_score_sub(wine_in$simple_region[i], current_score_RCGY)
if(is.na(R)){
k= k +1
}
C <- get_score_sub(wine_in$Ursprung[i], current_score_RCGY)
if(is.na(C)){
k= k +1
}
G <- get_score_sub(wine_in$class_grape[i], current_score_RCGY)
if(is.na(G)){
k= k +1
}
Y <- get_score_sub(wine_in$Argang[i], current_score_RCGY)
if(is.na(Y)){
k= k +1
}
p = 5*k/4
if(k == 4){
p = NA
}
score_RCGY[i] <- mean(c(R,C,G,Y),na.rm=TRUE)-p
}
warnings()
wine_in$simple_region[i]
wine_in$simple_region[1]
wine_in$simple_region
i=1
R <- get_score_sub(wine_in$simple_region[i], current_score_RCGY)
score_RCGY <- c()
wine_in$simple_region <- unlist(lapply(wine_in$Ursprung, function(x) x<- strsplit(x,"\\.")[[1]][1]))
wine_in$class_grape   <- get_class_wine(wine_in$RavarorBeskrivning)
for (i in 1:length(wine_in$Artikelid)){
k = 0
R <- get_score_sub(wine_in$simple_region[i], current_score_RCGY)
if(is.na(R)){
print(wine_in$simple_region[i])
k= k +1
}
C <- get_score_sub(wine_in$Ursprung[i], current_score_RCGY)
if(is.na(C)){
k= k +1
}
G <- get_score_sub(wine_in$class_grape[i], current_score_RCGY)
if(is.na(G)){
k= k +1
}
Y <- get_score_sub(wine_in$Argang[i], current_score_RCGY)
if(is.na(Y)){
k= k +1
}
p = 5*k/4
if(k == 4){
p = NA
}
score_RCGY[i] <- mean(c(R,C,G,Y),na.rm=TRUE)-p
}
warnings()
k = 0
R <- get_score_sub(wine_in$simple_region[i], current_score_RCGY)
if(is.na(R)){
print(wine_in$simple_region[i])
k= k +1
}
C <- get_score_sub(wine_in$Ursprung[i], current_score_RCGY)
if(is.na(C)){
k= k +1
}
G <- get_score_sub(wine_in$class_grape[i], current_score_RCGY)
if(is.na(G)){
k= k +1
}
Y <- get_score_sub(wine_in$Argang[i], current_score_RCGY)
if(is.na(Y)){
k= k +1
}
p = 5*k/4
if(k == 4){
p = NA
}
score_RCGY[i] <- mean(c(R,C,G,Y),na.rm=TRUE)-p
for (i in 1:100){
k = 0
R <- get_score_sub(wine_in$simple_region[i], current_score_RCGY)
if(is.na(R)){
print(wine_in$simple_region[i])
k= k +1
}
C <- get_score_sub(wine_in$Ursprung[i], current_score_RCGY)
if(is.na(C)){
k= k +1
}
G <- get_score_sub(wine_in$class_grape[i], current_score_RCGY)
if(is.na(G)){
k= k +1
}
Y <- get_score_sub(wine_in$Argang[i], current_score_RCGY)
if(is.na(Y)){
k= k +1
}
p = 5*k/4
if(k == 4){
p = NA
}
score_RCGY[i] <- mean(c(R,C,G,Y),na.rm=TRUE)-p
}
i=8
k = 0
R <- get_score_sub(wine_in$simple_region[i], current_score_RCGY)
if(is.na(R)){
print(wine_in$simple_region[i])
k= k +1
}
C <- get_score_sub(wine_in$Ursprung[i], current_score_RCGY)
if(is.na(C)){
k= k +1
}
G <- get_score_sub(wine_in$class_grape[i], current_score_RCGY)
if(is.na(G)){
k= k +1
}
Y <- get_score_sub(wine_in$Argang[i], current_score_RCGY)
if(is.na(Y)){
k= k +1
}
p = 5*k/4
if(k == 4){
p = NA
}
score_RCGY[i] <- mean(c(R,C,G,Y),na.rm=TRUE)-p
}
R
source.with.encoding('~/Rscripts/Webcrawler/get_score_sub.R', encoding='UTF-8')
score_RCGY <- c()
wine_in$simple_region <- unlist(lapply(wine_in$Ursprung, function(x) x<- strsplit(x,"\\.")[[1]][1]))
wine_in$class_grape   <- get_class_wine(wine_in$RavarorBeskrivning)
for (i in 1:100){
k = 0
R <- get_score_sub(wine_in$simple_region[i], current_score_RCGY)
if(is.na(R)){
print(wine_in$simple_region[i])
k= k +1
}
C <- get_score_sub(wine_in$Ursprung[i], current_score_RCGY)
if(is.na(C)){
k= k +1
}
G <- get_score_sub(wine_in$class_grape[i], current_score_RCGY)
if(is.na(G)){
k= k +1
}
Y <- get_score_sub(wine_in$Argang[i], current_score_RCGY)
if(is.na(Y)){
k= k +1
}
p = 5*k/4
if(k == 4){
p = NA
}
score_RCGY[i] <- mean(c(R,C,G,Y),na.rm=TRUE)-p
}
R
table_out             <- data.frame(name =character(0),score = numeric(0), stringsAsFactors=F)
wine_in               <- wine_in[which(wine_in$real_score != 99),]
wine_in$simple_region <- unlist(lapply(wine_in$Ursprung, function(x) x<- strsplit(x,"\\.")[[1]][1]))
wine_in$class_grape   <- unlist(get_class_wine(wine_in$RavarorBeskrivning))
regions <- unlist(unique(wine_in$simple_region))
country <- unique(wine_in$Ursprunglandnamn)
grape   <- unique(wine_in$class_grape)
year    <- unique(wine_in$Argang)
region
regions
source('~/Rscripts/Webcrawler/wine_classify.R')
source('~/Rscripts/Webcrawler/wine_classify.R')
View(all_wine)
source('~/Rscripts/Webcrawler/wine_classify.R')
source('~/Rscripts/Webcrawler/wine_classify.R')
View(all_wine)
plot(all_wine$predicted_sum,all_wine$PrisPerLiter)
library(XML)
library(RCurl)
library(stringr)
page  = 1
k = 0
save_id <-data.frame(Year = character(0),Country = character(0),
Region  = character(0), Volume = character(0),
Price  = character(0), Article_number = character(0),
Name = character(0), fyllighet  = character(0),
stravhet = character(0), fruktsyra = character(0),
druva = character(0), smak = character(0), doft = character(0),
stringsAsFactors=F)
sys_xml<-read.csv('~/Rscripts/Webcrawler/Alla+Artiklar.csv',stringsAsFactors=F)
sys_xml<-read.csv('~/Rscripts/Webcrawler/Systembolaget_webcrawl/Alla+Artiklar.csvAlla+Artiklar.csv',stringsAsFactors=F)
sys_xml<-read.csv('~/Rscripts/Webcrawler/Systembolaget_webcrawl/Alla+Artiklar.csv',stringsAsFactors=F)
View(sys_xml)
source.with.encoding('./get details.R', encoding='UTF-8')
setwd("~/Rscripts/Webcrawler/Systembolaget_webcrawl")
source.with.encoding('./get details.R', encoding='UTF-8')
ls()
pwd()
sys_xml.Rwine <- sys_xml[which(grepl('Rott vin', sys_xml$Varugrupp)),]
ar_id<-sys_xml.Rwine$Varnummer[[1]]
one_url <- paste("http://www.systembolaget.se/Sok-dryck/Dryck/?artikelId=299029&varuNr=",ar_id,"&referringUrl=%2fglobalsok",sep="")
tagrecode <- htmlTreeParse(one_url,useInternalNodes = T)
tagrecode
root<-xmlRoot(tagrecode)
info<-xmlValue(root[[3]][[2]])
info
smak_split <- str_split(info, "Smak \r")
smak_out <- "inte testat"
smak_split
smak_split <- str_split(smak_split[[1]][2], "\r")
smak_split
smak_split[[1]]
smak_split[1]
smak_split[[1]][1]
smak_split <- gsub(pattern = ",",replacement = "",x = smak_split[[1]][1])
smak_split <- gsub(pattern = "\\.",replacement = "",x = smak_split)
smak_split
smak_split <- str_split(smak_split[[1]][1], " ")[1]
smak_split <- str_split(smak_split[[1]][1], " ")[1]
smak_split
smak_split <- str_split(info, "Smak \r")
smak_split <- str_split(smak_split[[1]][2], "\r")
smak_split <- gsub(pattern = ",",replacement = "",x = smak_split[[1]][1])
smak_split <- gsub(pattern = "\\.",replacement = "",x = smak_split)
smak_split <- str_split(smak_split[[1]][1], " ")[1]
smak_split
smak_out   <- str_join(smak_split[nchar(smak_split) > 3], collapse = ".")
smak_split <- unlist(smak_split)
smak_out   <- str_join(smak_split[nchar(smak_split) > 3], collapse = ".")
smak_out
str_trim("\n       ehej       ")
fyllighet_split   <- str_split(fyllighet_split[[1]][3], "=")
stravhet_split    <- str_split(stravhet_split[[1]][3], "=")
fruktsyra_split <- str_split(fruktsyra_split[[1]][3], "=")
fyllighet_split   <- str_split(info, "Fyllighet\r")
stravhet_split    <- str_split(info, "StrÃ¤vhet\r")
fruktsyra_split <- str_split(info, "Fruktsyra\r")
fyllighet_split   <- str_split(fyllighet_split[[1]][3], "=")
stravhet_split    <- str_split(stravhet_split[[1]][3], "=")
fruktsyra_split <- str_split(fruktsyra_split[[1]][3], "=")
fyllighet_out <- gsub(pattern = " ", x = substr(fyllighet_split[[1]][2], 2 , 3), replacement = "")
stravhet_out  <- gsub(pattern = " ", x = substr(stravhet_split[[1]][2], 2 , 3), replacement = "")
fruktsyra_out <- gsub(pattern = " ", x = substr(fruktsyra_split[[1]][2], 2 , 3), replacement = "")
fruktsyra_out
stravhet_out
stravhet_split    <- str_split(info, "Strävhet\r")
stravhet_split    <- str_split(info, "Strävhet\r")
stravhet_out
info
stravhet_split    <- str_split(info, "Str[.]vhet\r")
stravhet_out
stravhet_split    <- str_split(info, "Str.vhet\r")
stravhet_out
info
stravhet_split    <- str_split(info, "Strävhet\r")
stravhet_split
stravhet_split    <- str_split(stravhet_split[[1]][3], "=")
stravhet_split
stravhet_out  <- gsub(pattern = " ", x = substr(stravhet_split[[1]][2], 2 , 3), replacement = "")
stravhet_out
druva_split <- str_split(info, "Råvaror \r")
druva_split <- str_split(druva_split[[1]][2], "\r")
druva_split <- gsub(pattern = ",",replacement = "",x = druva_split[[1]][1])
druva_split <- gsub(pattern = "\\.",replacement = "",x = druva_split)
druva_split <- unlist(druva_split)
druva_out   <- str_join(druva_split[nchar(druva_split) > 2], collapse = ",")
druva_split <- str_split(druva_split, " ")[1]
druva_out
druva_split <- str_split(info, "Råvaror \r")
druva_split <- str_split(druva_split[[1]][2], "\r")
druva_split <- gsub(pattern = ",",replacement = "",x = druva_split[[1]][1])
druva_split <- gsub(pattern = "\\.",replacement = "",x = druva_split)
druva_split <- str_split(druva_split, " ")[1]
druva_split <- unlist(druva_split)
druva_out   <- str_join(druva_split[nchar(druva_split) > 2], collapse = ",")
druva_out
druva_out   <- str_join(druva_split[nchar(druva_split) > 3], collapse = ".")
druva_out
asdafa<-read.csv("data_mine_wine_save.csv")
View(asdafa)
all_wine <- read.csv("./data_mine_wine_score.csv", stringsAsFactors = F)
source.with.encoding('./get_score_sub.R', encoding='UTF-8')
source.with.encoding('./get_class_wine.R', encoding='UTF-8')
source.with.encoding('./make_score_RCGY.R', encoding='UTF-8')
source.with.encoding('./make_score_Bar.R', encoding='UTF-8')
source.with.encoding('./make_score_taste.R', encoding='UTF-8')
source.with.encoding('./predict_score_bar.R', encoding='UTF-8')
source.with.encoding('./predict_score_taste.R', encoding='UTF-8')
source.with.encoding('./predict_score_RCGY.R', encoding='UTF-8')
current_score_RCGY       <- make_score_RCGY(all_wine)
View(current_score_RCGY)
View(current_score_RCGY)
current_score_bar        <- make_score_Bar(all_wine)
current_score_bar
current_score_bar[[1]]
current_score_bar[[2]]
current_score_bar[[3]]
current_score_taste      <- make_score_taste(all_wine)
View(current_score_taste)
vanilj�
(T && F)
(T && T)
