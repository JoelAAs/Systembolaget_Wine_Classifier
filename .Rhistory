all_word <- lapply(all_word, function(x) x<-gsub("\\."     ,x,replacement = ""))
all_word <- lapply(all_word, function(x) x<-gsub(" , "     ,x,replacement = ","))
all_word <- lapply(all_word, function(x) x<-gsub(" "      ,x,replacement = ""))
all_word
all_word <- lapply(save_id_tmp$RavarorBeskrivning, function(x) x<-gsub("[0-9/%]+",tolower(x),replacement = ""))
all_word <- lapply(all_word, function(x) x<-gsub("samt ovriga druvsorter",x,replacement = ""))
all_word <- lapply(all_word, function(x) x<-gsub(" och ",x,replacement = ","))
all_word <- lapply(all_word, function(x) x<-gsub(" samt ",x,replacement = ","))
all_word <- lapply(all_word, function(x) x<-gsub("\\."     ,x,replacement = ""))
all_word <- lapply(all_word, function(x) x<-gsub(" "      ,x,replacement = ""))
all_word
source('~/Rscripts/Webcrawler/sort_word_manual.R')
all_word <- lapply(save_id_tmp$RavarorBeskrivning, function(x) x<-gsub("[0-9/%]+",tolower(x),replacement = ""))
all_word <- lapply(all_word, function(x) x<-gsub("samt ovriga druvsorter",x,replacement = ""))
all_word <- lapply(all_word, function(x) x<-gsub("och",x,replacement = ","))
all_word <- lapply(all_word, function(x) x<-gsub("samt",x,replacement = ","))
all_word <- lapply(all_word, function(x) x<-gsub("huvudsakligen",x,replacement = ""))
all_word <- lapply(all_word, function(x) x<-gsub("\\."     ,x,replacement = ""))
all_word <- lapply(all_word, function(x) x<-gsub(" "      ,x,replacement = ""))
source('~/Rscripts/Webcrawler/sort_word_manual.R')
source('~/Rscripts/Webcrawler/sort_word_manual.R')
all_wine <- read.csv("~/Rscripts/Webcrawler/FulldataRwine.csv", stringsAsFactors = F)
1!=0
"hej"!= "hej"
0 != NA
0 != fa
0 != 2
NA(1)
NA(r)
source('~/Rscripts/Webcrawler/get_class_wine.R')
list(all_wine, detail_info, details_df)
a<-c("hej" "då")
a<-c("hej" "da")
c("a"  "b")
c("a" , "b")
a<-c("hej", "då")
match("hej",a)
source('~/Rscripts/Webcrawler/get_score_RCGY_sub.R')
source('~/Rscripts/Webcrawler/make_score_RCGY.R')
source('~/Rscripts/Webcrawler/predict_score_RCGY.R')
mean(c(2,NA,3,2))
mean(c(2,NaN,3,2))
source('~/Rscripts/Webcrawler/make_score_Bar.R')
source('~/Rscripts/Webcrawler/predict_score_RCGY.R')
source('~/Rscripts/Webcrawler/predict_score_bar.R')
is.na(c(NA NA 1 2))
is.na(c(NA NA Na NA))
0-NA
source('~/Rscripts/Webcrawler/wine_classify.R')
all_wine <- read.csv("~/Rscripts/Webcrawler/data_mine_wine_score.csv", stringsAsFactors = F)
source.with.encoding('~/Rscripts/Webcrawler/get_score_sub.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/get_class_wine.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_Bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_taste.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_taste.R', encoding='UTF-8')
# Fungerar
current_score_RCGY       <- make_score_RCGY(all_wine)
# Fungerar
current_score_bar        <- make_score_Bar(all_wine)
# Fungerar
current_score_taste      <- make_score_taste(all_wine)
# Fungerar
all_wine$RCGY_predicted  <- predict_score_RCGY(all_wine,current_score_RCGY)
# Fungerar
all_wine$bar_predicted   <- predict_score_bar(all_wine, current_score_bar)
# Fungerar
all_wine$Taste_predicted <- predict_score_taste(all_wine,current_score_taste)
View(all_wine)
all_wine <- read.csv("~/Rscripts/Webcrawler/data_mine_wine_score.csv", stringsAsFactors = F)
source.with.encoding('~/Rscripts/Webcrawler/get_score_sub.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/get_class_wine.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_Bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_taste.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_taste.R', encoding='UTF-8')
# Fungerar
current_score_RCGY       <- make_score_RCGY(all_wine)
# Fungerar
current_score_bar        <- make_score_Bar(all_wine)
# Fungerar
current_score_taste      <- make_score_taste(all_wine)
# Fungerar
all_wine$RCGY_predicted  <- predict_score_RCGY(all_wine,current_score_RCGY)
# Fungerar
all_wine$bar_predicted   <- predict_score_bar(all_wine, current_score_bar)
# Fungerar
all_wine$Taste_predicted <- predict_score_taste(all_wine,current_score_taste)
source('~/Rscripts/Webcrawler/wine_classify.R')
View(all_wine)
View(all_wine)
View(current_score_taste)
all_wine <- read.csv("~/Rscripts/Webcrawler/data_mine_wine_score.csv", stringsAsFactors = F)
source.with.encoding('~/Rscripts/Webcrawler/get_score_sub.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/get_class_wine.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_Bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_taste.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_taste.R', encoding='UTF-8')
# Fungerar
current_score_RCGY       <- make_score_RCGY(all_wine)
# Fungerar
current_score_bar        <- make_score_Bar(all_wine)
# Fungerar
current_score_taste      <- make_score_taste(all_wine)
# Fungerar
all_wine$RCGY_predicted  <- predict_score_RCGY(all_wine,current_score_RCGY)
# Fungerar
all_wine$bar_predicted   <- predict_score_bar(all_wine, current_score_bar)
# Fungerar
all_wine$Taste_predicted <- predict_score_taste(all_wine,current_score_taste)
View(all_wine)
c(1 2 3)
c(1, 2, 3)+c(1, 2, ,3)
c(1, 2, 3)+c(1, 2, 3)
(c(1, 2, 3)+c(1, 2, 3))/3
all_wine$predicted_sum   <- (all_wine$RCGY_predicted + all_wine$bar_predicted + all_wine$Taste_predicted)/3
View(all_wine)
hist(all_wine$predicted_sum)
test<-data.frame(all_wine$Namn,all_wine$predicted_sum)
sort(test)
sort(test$all_wine.predicted_sum)
test<-est[sort(test$all_wine.predicted_sum)
asd
test<-test[sort(test$all_wine.predicted_sum)]
test<-test[sort(test$predicted_sum)]
test<-test[sort(test$predicted_sum),]
sort(test$predicted_sum)
test<-test[sort(test$all_wine.predicted_sum)]
sort(test$all_wine.predicted_sum)]
sort(test$all_wine.predicted_sum)
sort(test$all_wine.predicted_sum)
test<-data.frame(all_wine$Namn,all_wine$predicted_sum)
test[sort(test$all_wine.predicted_sum)]
test[sort(test$all_wine.predicted_sum),]
View(all_wine)
test<-data.frame(all_wine$Namn,all_wine$predicted_sum,all_wine$PrisPerLiter)
test[sort(test$all_wine.predicted_sum),]
a<-test[sort(test$all_wine.predicted_sum),]
View(a)
test
View(test)
a<-test[order(all_wine.predicted_sum),]
a<-test[order(test$all_wine.predicted_sum),]
a
plot(test$all_wine.predicted_sum,test$all_wine.PrisPerLiter)
View(a)
source('~/Rscripts/Webcrawler/wine_classify.R')
all_wine <- read.csv("~/Rscripts/Webcrawler/data_mine_wine_score.csv", stringsAsFactors = F)
source.with.encoding('~/Rscripts/Webcrawler/get_score_sub.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/get_class_wine.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_Bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_taste.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_taste.R', encoding='UTF-8')
# Fungerar
current_score_RCGY       <- make_score_RCGY(all_wine)
View(all_wine)
source('~/Rscripts/Webcrawler/wine_classify.R')
View(all_wine)
source('~/Rscripts/Webcrawler/wine_classify.R')
current_score_RCGY       <- make_score_RCGY(all_wine)
all_wine <- read.csv("~/Rscripts/Webcrawler/data_mine_wine_score.csv", stringsAsFactors = F)
source.with.encoding('~/Rscripts/Webcrawler/get_score_sub.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/get_class_wine.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_Bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_taste.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_taste.R', encoding='UTF-8')
# Fungerar
current_score_RCGY       <- make_score_RCGY(all_wine)
View(current_score_RCGY)
wine_in<-all_wine
table_out             <- data.frame(name =character(0),score = numeric(0), stringsAsFactors=F)
wine_in               <- wine_in[which(wine_in$real_score != 99),]
wine_in$simple_region <- unlist(lapply(wine_in$Ursprung, function(x) x<- strsplit(x,"\\.")[[1]][1]))
wine_in$class_grape   <- unlist(get_class_wine(wine_in$RavarorBeskrivning))
regions <- unlist(unique(wine_in$simple_region))
country <- unique(wine_in$Ursprunglandnamn)
grape   <- unique(wine_in$class_grape)
year    <- unique(wine_in$Argang)
lapply(wine_in$Ursprung, function(x) x<- strsplit(x,"\\.")
)
unlist(get_class_wine(wine_in$RavarorBeskrivning))
source('~/Rscripts/Webcrawler/wine_classify.R')
all_wine <- read.csv("~/Rscripts/Webcrawler/data_mine_wine_score.csv", stringsAsFactors = F)
source.with.encoding('~/Rscripts/Webcrawler/get_score_sub.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/get_class_wine.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_Bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/make_score_taste.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_bar.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_RCGY.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/predict_score_taste.R', encoding='UTF-8')
current_score_RCGY       <- make_score_RCGY(all_wine)
current_score_bar        <- make_score_Bar(all_wine)
current_score_taste      <- make_score_taste(all_wine)
all_wine$RCGY_predicted  <- predict_score_RCGY(all_wine,current_score_RCGY)
warnings()
all_wine$bar_predicted   <- predict_score_bar(all_wine, current_score_bar)
# Fungerar
all_wine$Taste_predicted <- predict_score_taste(all_wine,current_score_taste)
all_wine$predicted_sum   <- (all_wine$RCGY_predicted + all_wine$bar_predicted + all_wine$Taste_predicted)/3
wine_in<-all_wine
score_RCGY <- c()
wine_in$simple_region <- unlist(lapply(wine_in$Ursprung, function(x) x<- strsplit(x,"\\.")[[1]][1]))
wine_in$class_grape   <- get_class_wine(wine_in$RavarorBeskrivning)
for (i in 1:length(wine_in$Artikelid)){
k = 0
R <- get_score_sub(wine_in$simple_region[i], current_score_RCGY)
if(is.na(R)){
k= k +1
}
C <- get_score_sub(wine_in$Ursprung[i], current_score_RCGY)
if(is.na(C)){
k= k +1
}
G <- get_score_sub(wine_in$class_grape[i], current_score_RCGY)
if(is.na(G)){
k= k +1
}
Y <- get_score_sub(wine_in$Argang[i], current_score_RCGY)
if(is.na(Y)){
k= k +1
}
p = 5*k/4
if(k == 4){
p = NA
}
score_RCGY[i] <- mean(c(R,C,G,Y),na.rm=TRUE)-p
}
warnings()
wine_in$simple_region[i]
wine_in$simple_region[1]
wine_in$simple_region
i=1
R <- get_score_sub(wine_in$simple_region[i], current_score_RCGY)
score_RCGY <- c()
wine_in$simple_region <- unlist(lapply(wine_in$Ursprung, function(x) x<- strsplit(x,"\\.")[[1]][1]))
wine_in$class_grape   <- get_class_wine(wine_in$RavarorBeskrivning)
for (i in 1:length(wine_in$Artikelid)){
k = 0
R <- get_score_sub(wine_in$simple_region[i], current_score_RCGY)
if(is.na(R)){
print(wine_in$simple_region[i])
k= k +1
}
C <- get_score_sub(wine_in$Ursprung[i], current_score_RCGY)
if(is.na(C)){
k= k +1
}
G <- get_score_sub(wine_in$class_grape[i], current_score_RCGY)
if(is.na(G)){
k= k +1
}
Y <- get_score_sub(wine_in$Argang[i], current_score_RCGY)
if(is.na(Y)){
k= k +1
}
p = 5*k/4
if(k == 4){
p = NA
}
score_RCGY[i] <- mean(c(R,C,G,Y),na.rm=TRUE)-p
}
warnings()
k = 0
R <- get_score_sub(wine_in$simple_region[i], current_score_RCGY)
if(is.na(R)){
print(wine_in$simple_region[i])
k= k +1
}
C <- get_score_sub(wine_in$Ursprung[i], current_score_RCGY)
if(is.na(C)){
k= k +1
}
G <- get_score_sub(wine_in$class_grape[i], current_score_RCGY)
if(is.na(G)){
k= k +1
}
Y <- get_score_sub(wine_in$Argang[i], current_score_RCGY)
if(is.na(Y)){
k= k +1
}
p = 5*k/4
if(k == 4){
p = NA
}
score_RCGY[i] <- mean(c(R,C,G,Y),na.rm=TRUE)-p
for (i in 1:100){
k = 0
R <- get_score_sub(wine_in$simple_region[i], current_score_RCGY)
if(is.na(R)){
print(wine_in$simple_region[i])
k= k +1
}
C <- get_score_sub(wine_in$Ursprung[i], current_score_RCGY)
if(is.na(C)){
k= k +1
}
G <- get_score_sub(wine_in$class_grape[i], current_score_RCGY)
if(is.na(G)){
k= k +1
}
Y <- get_score_sub(wine_in$Argang[i], current_score_RCGY)
if(is.na(Y)){
k= k +1
}
p = 5*k/4
if(k == 4){
p = NA
}
score_RCGY[i] <- mean(c(R,C,G,Y),na.rm=TRUE)-p
}
i=8
k = 0
R <- get_score_sub(wine_in$simple_region[i], current_score_RCGY)
if(is.na(R)){
print(wine_in$simple_region[i])
k= k +1
}
C <- get_score_sub(wine_in$Ursprung[i], current_score_RCGY)
if(is.na(C)){
k= k +1
}
G <- get_score_sub(wine_in$class_grape[i], current_score_RCGY)
if(is.na(G)){
k= k +1
}
Y <- get_score_sub(wine_in$Argang[i], current_score_RCGY)
if(is.na(Y)){
k= k +1
}
p = 5*k/4
if(k == 4){
p = NA
}
score_RCGY[i] <- mean(c(R,C,G,Y),na.rm=TRUE)-p
}
R
source.with.encoding('~/Rscripts/Webcrawler/get_score_sub.R', encoding='UTF-8')
score_RCGY <- c()
wine_in$simple_region <- unlist(lapply(wine_in$Ursprung, function(x) x<- strsplit(x,"\\.")[[1]][1]))
wine_in$class_grape   <- get_class_wine(wine_in$RavarorBeskrivning)
for (i in 1:100){
k = 0
R <- get_score_sub(wine_in$simple_region[i], current_score_RCGY)
if(is.na(R)){
print(wine_in$simple_region[i])
k= k +1
}
C <- get_score_sub(wine_in$Ursprung[i], current_score_RCGY)
if(is.na(C)){
k= k +1
}
G <- get_score_sub(wine_in$class_grape[i], current_score_RCGY)
if(is.na(G)){
k= k +1
}
Y <- get_score_sub(wine_in$Argang[i], current_score_RCGY)
if(is.na(Y)){
k= k +1
}
p = 5*k/4
if(k == 4){
p = NA
}
score_RCGY[i] <- mean(c(R,C,G,Y),na.rm=TRUE)-p
}
R
table_out             <- data.frame(name =character(0),score = numeric(0), stringsAsFactors=F)
wine_in               <- wine_in[which(wine_in$real_score != 99),]
wine_in$simple_region <- unlist(lapply(wine_in$Ursprung, function(x) x<- strsplit(x,"\\.")[[1]][1]))
wine_in$class_grape   <- unlist(get_class_wine(wine_in$RavarorBeskrivning))
regions <- unlist(unique(wine_in$simple_region))
country <- unique(wine_in$Ursprunglandnamn)
grape   <- unique(wine_in$class_grape)
year    <- unique(wine_in$Argang)
region
regions
source('~/Rscripts/Webcrawler/wine_classify.R')
source('~/Rscripts/Webcrawler/wine_classify.R')
View(all_wine)
source('~/Rscripts/Webcrawler/wine_classify.R')
source('~/Rscripts/Webcrawler/wine_classify.R')
View(all_wine)
plot(all_wine$predicted_sum,all_wine$PrisPerLiter)
source('~/Rscripts/Webcrawler/Systembolaget_webcrawl/predefXML.R')
setwd("~/Rscripts/Webcrawler/Systembolaget_webcrawl")
./get det
source('./get details.R', encoding='UTF-8')
source('get details.R', encoding='UTF-8')
source('~/Rscripts/Webcrawler/Systembolaget_webcrawl/get details.R')
source('get details.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/Systembolaget_webcrawl/get details.R', encoding='UTF-8')
source('./get_details.R', encoding='UTF-8')
setwd("~/Rscripts/Webcrawler/Systembolaget_webcrawl")
source('./get_details.R', encoding='UTF-8')
wd
source.with.encoding('./get_details.R', encoding='UTF-8')
library(XML)
library(RCurl)
library(stringr)
source.with.encoding('./get_details.R', encoding='UTF-8')
source.with.encoding('~/Rscripts/Webcrawler/Systembolaget_webcrawl/get_details.R', encoding='UTF-8')
source('~/Rscripts/Webcrawler/Systembolaget_webcrawl/get details.R')
source('~/Rscripts/Webcrawler/Systembolaget_webcrawl/get details.R')
source('~/Rscripts/Webcrawler/Systembolaget_webcrawl/get details.R')
source('~/Rscripts/Webcrawler/Systembolaget_webcrawl/predefXML.R')
View(detail_info)
View(details_df)
source('~/Rscripts/Webcrawler/Systembolaget_webcrawl/predefXML.R')
source('~/Rscripts/Webcrawler/Systembolaget_webcrawl/predefXML.R')
all_wine <- read.csv("./data_mine_wine_score.csv", stringsAsFactors = F)
all_wine$real_score * 2 -10
all_wine$real_score<-all_wine$real_score * 2 -10
all_wine$real_score<-all_wine$real_score[which(all_wine$real_score == 188),] = 99
all_wine$real_score
source('~/Rscripts/Webcrawler/Systembolaget_webcrawl/wine_classify.R', echo=TRUE)
all_wine
all_wine$real_score
all_wine$real_score<-all_wine$real_score * 2 -10
all_wine$real_score[which(all_wine$real_score ==188),] <- 99
all_wine$real_score[which(all_wine$real_score == 188),]
all_wine$real_score[which(all_wine$real_score == 188),]
all_wine$real_score[which(all_wine$real_score == 188)]
all_wine$real_score[which(all_wine$real_score ==188)] <- 99
all_wine$real_score
write.csv(all_wine, "data_mine_wine_score.csv")
all_wine <- read.csv("./data_mine_wine_score.csv", stringsAsFactors = F)
source.with.encoding('./get_score_sub.R', encoding='UTF-8')
source.with.encoding('./get_class_wine.R', encoding='UTF-8')
source.with.encoding('./make_score_RCGY.R', encoding='UTF-8')
source.with.encoding('./make_score_Bar.R', encoding='UTF-8')
source.with.encoding('./make_score_taste.R', encoding='UTF-8')
source.with.encoding('./predict_score_bar.R', encoding='UTF-8')
source.with.encoding('./predict_score_RCGY.R', encoding='UTF-8')
source.with.encoding('./predict_score_taste.R', encoding='UTF-8')
# Fungerar
current_score_RCGY       <- make_score_RCGY(all_wine)
# Fungerar
current_score_bar        <- make_score_Bar(all_wine)
# Fungerar
current_score_taste      <- make_score_taste(all_wine)
# Fungerar
all_wine$RCGY_predicted  <- predict_score_RCGY(all_wine,current_score_RCGY)
# Fungerar
all_wine$bar_predicted   <- predict_score_bar(all_wine, current_score_bar)
# Fungerar
all_wine$Taste_predicted <- predict_score_taste(all_wine,current_score_taste)
source('~/Rscripts/Webcrawler/Systembolaget_webcrawl/predict_score_taste.R', echo=TRUE)
source('~/Rscripts/Webcrawler/Systembolaget_webcrawl/wine_classify.R', echo=TRUE)
View(all_wine)
source('~/Rscripts/Webcrawler/Systembolaget_webcrawl/wine_classify.R', echo=TRUE)
source('~/Rscripts/Webcrawler/Systembolaget_webcrawl/wine_classify.R', echo=TRUE)
View(all_wine)
source('~/Rscripts/Webcrawler/Systembolaget_webcrawl/wine_classify.R', echo=TRUE)
source('~/Rscripts/Webcrawler/Systembolaget_webcrawl/wine_classify.R', echo=TRUE)
View(all_wine)
View(current_score_taste)
View(all_wine)
all_wine$smak[1]
all_wine$smak[1]
word_list = all_wine$smak
word_list = all_wine$smak[1]
word_list
word_list <- unlist(unique(strsplit(word_list,"\\.")))
score_tmp <- 0
k = 0
for(i in 1:length(word_list)){
if (word_list[i] %in% score_list$word){
k = k + 1
score_tmp <- score_tmp + as.numeric(score_list$score[which(word_list[i] %in% score_list$word)])
}
}
score_list <- current_score_taste
word_list <- unlist(unique(strsplit(word_list,"\\.")))
score_tmp <- 0
k = 0
for(i in 1:length(word_list)){
if (word_list[i] %in% score_list$word){
k = k + 1
score_tmp <- score_tmp + as.numeric(score_list$score[which(word_list[i] %in% score_list$word)])
}
}
score_tmp
k
length(tmp)
length(word_list)
word_list[1]
score_list$score[which(word_list[i] %in% score_list$word)]
score_list$score[which(word_list[1] %in% score_list$word)]
score_list$score[which(word_list[2] %in% score_list$word)]
View(score_list)
word_list[1]
score_list$score[which(word_list[1] %in% score_list$word)]
score_list$score[which(word_list[1] %in% score_list$word),]
score_list$score[which(word_list[1] %in% score_list$word)]
which(word_list[1] %in% score_list$word)
which(word_list[2] %in% score_list$word)
which(word_list[[2]] %in% score_list$word)
which(word_list[1 %in% score_list$word)
